

syntax = "proto3";


package NfsProtocol;

service NfsServer {

	rpc server_mkdir(mkdir_request) returns (c_response) {}

	rpc server_rmdir(rmdir_request) returns (c_response) {}

	rpc server_rename(rename_request) returns (c_response) {}

	rpc server_open(open_request) returns (d_response) {}

	rpc server_create(create_request) returns (d_response) {}

	rpc read_directory(readdir_request) returns (readdir_response) {}

	// rpc read(read_request) returns (read_response) {}

	// rpc write(write_request) returns (write_response) {}

	// rpc remove(remove_request) returns (remove_response) {}

	// rpc getattr(getattr_request) returns (getattr_response) {}
	
	// rpc makenode(makenode_request) returns (makenode_response) {}

	// rpc truncate(truncate_request) returns (truncate_response) {}

	// rpc release(release_request) returns (release_response) {}
	
	// rpc fsync(fsync_request) returns (fsyn_response) {}  

	// rpc unlink(unlink_request) returns (unlin_response) {}

	// rpc flush(flush_request) returns (flush_response) {}
	
	// rpc utimens (utimens_request) returns (utimens_response) {}

}

message attributes {
	uint64 st_dev = 1;
	uint64 st_ino = 2;
	uint64 st_mode = 3;
	uint64 st_nlink = 4;
	uint64 st_uid = 5;
	uint64 st_gid = 6;
	uint64 st_rdev = 7;
	uint64 st_size = 8;
	uint64 st_catime = 9;
	uint64 st_cmtime = 10;
	uint64 st_cctime = 11;
	uint64 st_blksize = 12;
	uint64 st_blocks = 13;
	uint64 st_attr = 14;
}

message mkdir_request {
	string dirfh = 1;
	string name = 2;
	attributes attr = 3;
}

message c_response {
	uint64 success = 1;
	uint64 ern = 2;
}

message rmdir_request {
	string dirfh = 1;
}

message rename_request {
	string todir = 1;
	string fromdir = 2;
}

message f_info {
	uint64 fh = 1;
	uint32 flags = 2;
}

message open_request {
	string path = 1;
	f_info fi = 2;
}

message create_request {
	string path = 1;
	uint64 mode = 2;
	f_info fi = 3;
}

message d_response {
	int32 status = 1;
	f_info fi = 2;
}

message read_directory_single_object {
	string name = 1;
	attributes attr = 2;
}

message readdir_request {
	string path = 1;
	proto_file_info fi = 2;
}

message readdir_response {
	repeated read_directory_single_object objects = 1;
	int32 status = 2;
}



